# Протокол HTTP(HyperText Transfer Protocol) - Протокол передачи гипертекста

# Клиент <-> Сервер

# URI (Uniform Resource Identifier) /URL/ссылка на ресурс/данные/веб-сайт

# Веб-браузеры - инструмент для получения данных.

# Request - Запрос от клиента на какой-то ресурс.
# Response - Ответ на запрос от клиента, если запрос правильный response возвращает нужные данные.

# HTTP - 1. GET запрос (Метод запроса для получения данных и возврат этих данных в виде ответа для клиентов)
#         2. POST(Метод для создания каких то данных)
#         3. PUT(Метод для полного изменения одного блока данных)
#         4, PATCH (Метод для частичного изменения данных)
#         5. DELETE (Удаляет данные)

# Статусы ответа:
# 404 - Not Found
# сотые статусы (100) / 100 - 199 - Информационные статусы
# (100 - continue)
# 200ые (двухсотые) статусы/ 200-299 - Успешные статусы.
# (200 - OK, 201 - статус Created, 204 - No content)
# 300ые статусы/300-399 - Redirecting (Перенаправление)
# (301 - Moved)
# 400ые статусы / 400-499 - Клиентские ошибки.
# (400 - Bad Request, 401 - Не авторизован, 403 - Forbidden, 404 - Not found)
# 500ые статусы / 500-599 - Серверные ошибки
# (500 - Internal Server Error)

#------------------------------------------------------------------

# REST (Representational State Transfer) - это стиль архитектуры для програмного обеспечения распредленных систем, таких как World Wide Web (www).

# Термин REST - 2000 году Рой Филдинг


# Веб Сайт = Разделение одного веб сайта на две части - клиентская часть и серверная  
# Каждая единица данных у нас в REST определяется определенным URL

# URL в архитектуре REST: 
# GET...../book/ - Получить список всех книг
# GET...../book/3/ - Получаем определенную книгу под id 3
# POST...../book/ - Добавление(создание) новой книги
# PUT ....../book/3/ - Изменение книги под номером 3
# DELETE .../book/3 - Удаление книги под номером 3

# Заголовки запросов:
#     Запрос(Requeest):
#     GET https://35.127.18.190/allbooks/ - Получение
#     POST https://mysite.com/allbooks/ - Создание

#     Заголовки запроса(Headers):
#     content-Type: text/html; charset=UTF-8



